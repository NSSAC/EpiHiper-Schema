#!/usr/bin/env node

// BEGIN: Copyright
// Copyright (C) 2019 Rector and Visitors of the University of Virginia
// All rights reserved
// END: Copyright

// BEGIN: License
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// END: License

/* eslint-disable max-len */

const pkg = require('../package.json');
const commander = require('commander');
const EpiHiperAddNoise = require('../lib/epiHiperAddNoise');

let files;

commander
    .version(pkg.version)
    .description('EpiHiper Add Noise')
    .usage('[options] <file ...>')
    .option('-p --path <path>', 'JSONPath to be modified.')
    .option('-i --integer', 'specify whether the value is of type integer.', false)
    .option('-r --replace', 'replace input files.', false)
    .option('-n --negative', 'allow negative numbers.', false)
    .option('-d --distribution <distribution>', 'distribution to use [normal|uniform]', 'normal')
    .option('-s --sigma <sigma>', 'standard deviation of normal distribution.', NaN)
    .option('--min <min>', 'minimum of uniform distribution.', NaN)
    .option('--max <min>', 'maximum of uniform distribution.', NaN)
    .arguments('<files...>')
    .action(function(_files) {
      files = _files;
    });

commander.parse(process.argv);

if (typeof commander.integer === 'undefined') {
  commander.integer = false;
} else {
  commander.integer = true;
}

if (typeof commander.replace === 'undefined') {
  commander.replace = false;
} else {
  commander.replace = true;
}

if (typeof commander.negative === 'undefined') {
  commander.negative = false;
} else {
  commander.negative = true;
}

if (!Array.isArray(files)) {
  commander.help();
  process.exit(1);
}

try {
  const epiHiperAddNoise = new EpiHiperAddNoise(commander);

  epiHiperAddNoise
      .process(files)
      .then((result) => {
        process.exit(result ? 0 : 1);
      });
} catch (err) {
  console.log(err + '\n');
  commander.help();
}
