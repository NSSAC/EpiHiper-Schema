#!/usr/bin/env node

// BEGIN: Copyright
// Copyright (C) 2019 Rector and Visitors of the University of Virginia
// All rights reserved
// END: Copyright

// BEGIN: License
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//   http://www.apache.org/licenses/LICENSE-2.0
// END: License

const pkg = require('../package.json');
const cfg = require('../config.json');
const commander = require('commander');
const jsontron = require('@shoops/jsontron');
const path = require('path');
const fs = require('fs');

let files;

commander
    .version(pkg.version)
    .description('EpiHiper Schema Validation')
    .usage('[options] <file ...>')
    .option('-r --rules <rules>', 'Use the specified rules for validation')
    .arguments('<files...>')
    .action(function(_files) {
      files = _files;
    });

commander.parse(process.argv);

if (!Array.isArray(files)) {
  commander.help();
  process.exit(1);
}

const currDir = process.cwd();
const rules = {};

cfg.schema.forEach(function(s) {
  RulesFile = path.join(__dirname, '..', 'schema',
      s.replace('Schema.json', 'Rules.json'));

  if (RulesFile.endsWith('Rules.json') && fs.existsSync(RulesFile)) {
    rules[RulesFile] = require(RulesFile);
  }
});

if (!commander.rules) {
  commander.rules = '$rules';
}

files.forEach(function(file) {
  const InstanceFile = path.join(currDir, file);
  process.stdout.write('File: ' + InstanceFile);
  const Instance = require(InstanceFile);

  let RulesFile = commander.rules;
  const RulesRelDir = path.dirname(InstanceFile);

  if (RulesFile == '$rules') {
    RulesFile = path.join(RulesRelDir,
        Instance['$schema'].replace('Schema.json', 'Rules.json'));
    if (!RulesFile.endsWith('Rules.json')) {
      return;
    }
  } else {
    RulesFile = path.join(currDir, RulesFile);
  }

  // Check whether we have the rules already loaded
  let Rules = rules[RulesFile];

  if (typeof Rules === 'undefined') {
    try {
      Rules = require(RulesFile);
      rules[RulesFile] = Rules;

      console.log(Rules);
    } catch (e) {
      console.log(' no rules provided');
      return;
    }
  }

  Report = jsontron.JSONTRON.validate(Instance, Rules);

  if (Report.finalValidationReport.length) {
    console.log(' invalid');
    console.log(Report.finalValidationReport);
  } else {
    console.log(' valid');
  }
});
